<!DOCTYPE Robei>
<Module Height="600" Name="led_display" Parameters="" Include="" File="Current/led_display.model" Comment="" Color="#d3d3d3" X="0" Width="900" Class="module" Y="0" Type="module" Code="`define DEL 1&#xa;//&#xa;// LED display start signal&#xa;//&#xa;reg  display_en_q;&#xa;wire display_start;&#xa;&#xa;always @( posedge clk or negedge rst_n ) begin&#xa;  if( ~rst_n ) begin&#xa;    display_en_q &lt;= #`DEL 1'b0;&#xa;  end&#xa;  else begin&#xa;    display_en_q &lt;= #`DEL display_en;&#xa;  end&#xa;end      &#xa;// Rising edge effective&#xa;assign display_start = ~display_en_q &amp;&amp; display_en;&#xa;&#xa;//&#xa;// Parity check&#xa;//&#xa;always @( posedge clk ) begin&#xa;  if( display_data_in[8] != ( ^display_data_in[7:0] ) ) begin&#xa;    $display(&quot;LED:Parity check failed!&quot;);&#xa;    $display(&quot;Receive data is: 9'b%b_%b_%b&quot;,display_data_in[8],display_data_in[7:4],display_data_in[3:0]);&#xa;    $finish;&#xa;  end&#xa;end  &#xa;&#xa;//&#xa;// LED display decoder&#xa;//&#xa;reg [8:0] seg [15:0];&#xa;initial begin&#xa;  seg[0] = 9'h3f; // 0&#xa;  seg[1] = 9'h06; // 1&#xa;  seg[2] = 9'h5b; // 2&#xa;  seg[3] = 9'h4f; // 3&#xa;  seg[4] = 9'h66; // 4&#xa;  seg[5] = 9'h6d; // 5&#xa;  seg[6] = 9'h7d; // 6&#xa;  seg[7] = 9'h07; // 7&#xa;  seg[8] = 9'h7f; // 8&#xa;  seg[9] = 9'h6f; // 9&#xa;  seg[10]= 9'h77; // A&#xa;  seg[11]= 9'h7c; // b&#xa;  seg[12]= 9'h39; // C&#xa;  seg[13]= 9'h5e; // d&#xa;  seg[14]= 9'h79; // E&#xa;  seg[15]= 9'h71; // F&#xa;end&#xa;&#xa;reg [3:0] led0_temp;&#xa;reg [3:0] led1_temp;&#xa;reg       display_flag;&#xa;&#xa;always @( posedge clk or negedge rst_n ) begin&#xa;  if( ~rst_n ) begin&#xa;    led0_temp &lt;= #`DEL 4'd0;&#xa;    led1_temp &lt;= #`DEL 4'd0;&#xa;    display_flag &lt;= #`DEL 1'd0;&#xa;  end&#xa;  else if( display_start )begin&#xa;    led0_temp &lt;= #`DEL display_data_in[3:0];&#xa;    led1_temp &lt;= #`DEL display_data_in[7:4];&#xa;    display_flag &lt;= #`DEL 1'd1;&#xa;  end&#xa;  else begin      &#xa;    display_flag &lt;= #`DEL 1'd0;&#xa;  end&#xa;end      &#xa;&#xa;always @( posedge clk or negedge rst_n ) begin&#xa;  if( ~rst_n ) begin&#xa;    out_to_led0 &lt;= #`DEL 9'd0;&#xa;    out_to_led1 &lt;= #`DEL 9'd0;&#xa;  end&#xa;  else if( display_flag ) begin&#xa;    out_to_led0 &lt;= #`DEL seg[led0_temp];&#xa;    out_to_led1 &lt;= #`DEL seg[led1_temp];&#xa;  end&#xa;end      " Parent="0">
 <Port Height="20" Name="clk" Side="left" Color="#0000ff" X="-0.0222222" Width="20" Function="" Datatype="wire" Datasize="1" Y="0.15" Inout="input" Parent="led_display"/>
 <Port Height="20" Name="rst_n" Side="left" Color="#00ffff" X="-0.0222222" Width="20" Function="" Datatype="wire" Datasize="1" Y="0.316667" Inout="input" Parent="led_display"/>
 <Port Height="20" Name="display_data_in" Side="left" Color="#5f9ea0" X="-0.0222222" Width="20" Function="" Datatype="wire" Datasize="9" Y="0.483333" Inout="input" Parent="led_display"/>
 <Port Height="20" Name="out_to_led1" Side="right" Color="#00bfff" X="0.977778" Width="20" Function="" Datatype="reg" Datasize="9" Y="0.483333" Inout="output" Parent="led_display"/>
 <Port Height="20" Name="out_to_led0" Side="right" Color="#b8860b" X="0.977778" Width="20" Function="" Datatype="reg" Datasize="9" Y="0.233333" Inout="output" Parent="led_display"/>
 <Port Height="20" Name="display_en" Side="left" Color="#ffe4c4" X="-0.0222222" Width="20" Function="" Datatype="wire" Datasize="1" Y="0.65" Inout="input" Parent="led_display"/>
</Module>
