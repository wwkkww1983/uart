<!DOCTYPE Robei>
<Module Y="0" Include="" Comment="" Class="module" Code="//&#xa;// Generate clk&#xa;//&#xa;initial begin &#xa;  clk = 0;&#xa;end&#xa;always #42 clk = ~clk;&#xa;&#xa;//&#xa;// Generate reset signal&#xa;//&#xa;initial begin&#xa;  rst_n = 1;&#xa;  repeat(1) @( posedge clk ) #1;&#xa;  rst_n = 0;&#xa;  repeat(1) @( posedge clk ) #1;&#xa;  rst_n = 1;  &#xa;end&#xa;&#xa;// &#xa;// Generate key signal&#xa;//&#xa;initial begin&#xa;  key_in = 4'b1111;&#xa;  repeat(3077) @( posedge generate_clk1_clk_out ) #1;&#xa;  key_in = 4'b1110;&#xa;  repeat(3077) @( posedge generate_clk1_clk_out ) #1;&#xa;  key_in = 4'b1101;&#xa;  repeat(3077) @( posedge generate_clk1_clk_out ) #1;&#xa;  key_in = 4'b1011;&#xa;  repeat(3077) @( posedge generate_clk1_clk_out ) #1;&#xa;  key_in = 4'b0111;&#xa;  repeat(3077) @( posedge generate_clk1_clk_out ) #1;     &#xa;  #10 $finish;&#xa;end&#xa;&#xa;&#xa;" Color="#d3d3d3" Name="divclk_test" Type="testbench" Width="900" Height="600" Parent="0" X="0" File="Current/divclk_test.test" Time_Scale="">
 <Module Y="260.097" Include="" Comment="" Parameters="" Class="key" Code="&#x9;`define DEL 1&#xa;&#x9;&#xa;&#x9;//&#xa;&#x9;// Key signal detected&#xa;&#x9;//&#xa;&#x9;reg    [3:0] key_in_q;&#xa;&#x9;wire   [3:0] key_flag;&#xa;&#x9;&#xa;&#x9;always @( posedge clk or negedge rst_n ) begin&#xa;&#x9;  if( ~rst_n ) begin&#xa;&#x9;    key_in_q &lt;= #`DEL 4'b1111;&#xa;&#x9;  end&#xa;&#x9;  else begin&#xa;&#x9;    key_in_q &lt;= #`DEL key_in;&#xa;&#x9;  end&#xa;&#x9;end      &#xa;&#x9;assign key_flag = key_in_q &amp; ( ~key_in );&#xa;&#x9;&#xa;&#x9;//&#xa;&#x9;// Delay 20ms&#xa;&#x9;//&#xa;  reg   [ 11:0] cnt;&#xa;&#x9;reg   [  3:0] key_flag_delay;  // Detect key's status after delay 20ms&#xa;&#x9;&#xa;&#x9;always @( posedge clk or negedge rst_n ) begin&#xa;&#x9;  if( ~rst_n ) begin&#xa;&#x9;    cnt            &lt;= #`DEL 12'd0;&#xa;&#x9;    key_flag_delay &lt;= #`DEL  4'b1111;&#xa;&#x9;  end&#xa;&#x9;  else if( cnt == 12'd 3075 ) begin&#xa;&#x9;    cnt            &lt;= #`DEL cnt + 12'd1;&#xa;&#x9;    key_flag_delay &lt;= #`DEL key_flag;&#xa;&#x9;  end&#xa;&#x9;  else if( cnt == 12'd 3076 ) begin&#xa;&#x9;    cnt            &lt;= #`DEL 12'd0;&#xa;&#x9;    key_flag_delay &lt;= #`DEL key_flag_delay;&#xa;&#x9;  end // 20ms&#xa;&#x9;  else begin&#xa;&#x9;    cnt            &lt;= #`DEL cnt + 12'd1;&#xa;&#x9;    key_flag_delay &lt;= #`DEL 4'b1111;&#xa;&#x9;  end&#xa;&#x9;end&#xa;&#x9;&#xa;&#x9;//&#xa;&#x9;// If key has been pressed, output&#xa;&#x9;//&#xa;&#x9;always @( posedge clk or negedge rst_n ) begin&#xa;&#x9;  if( ~rst_n ) begin&#xa;&#x9;    key_out     &lt;= #`DEL 8'd0;&#xa;&#x9;    key_pressed &lt;= #`DEL 1'd0;&#xa;&#x9;  end&#xa;&#x9;  else begin&#xa;&#x9;    case( key_flag_delay ) &#xa;&#x9;      4'b0000: begin&#xa;&#x9;        key_out     &lt;= #`DEL 8'd0;&#xa;&#x9;        key_pressed &lt;= #`DEL 1'd0;&#xa;&#x9;      end // No key pressed&#xa;&#x9;      4'b0001: begin&#xa;&#x9;        key_out     &lt;= #`DEL 8'd1;&#xa;&#x9;        key_pressed &lt;= #`DEL 1'd1;&#xa;&#x9;      end // The first key's value is 1&#xa;&#x9;      4'b0010: begin&#xa;&#x9;        key_out     &lt;= #`DEL 8'd2;&#xa;&#x9;        key_pressed &lt;= #`DEL 1'd1;&#xa;&#x9;      end // The second key's value is 2&#xa;&#x9;      4'b0100: begin&#xa;&#x9;        key_out     &lt;= #`DEL 8'd3;&#xa;&#x9;        key_pressed &lt;= #`DEL 1'd1;&#xa;&#x9;      end // The third key's value is 3&#xa;&#x9;      4'b1000: begin&#xa;&#x9;        key_out     &lt;= #`DEL 8'd4;&#xa;&#x9;        key_pressed &lt;= #`DEL 1'd1;&#xa;&#x9;      end // The third key's value is 4&#xa;&#x9;      default: begin&#xa;&#x9;        key_out     &lt;= #`DEL key_out;&#xa;&#x9;        key_pressed &lt;= #`DEL 1'd0;&#xa;&#x9;      end &#xa;&#x9;    endcase&#xa;&#x9;  end&#xa;&#x9;end     &#xa;" Color="#d3d3d3" Name="key2" Type="model" Width="160" Height="160" Parent="divclk_test" X="454.3" File="Current/key.model">
  <Port Y="0.1375" Datasize="1" Datatype="wire" Color="#0000ff" Side="left" Name="clk" Inout="input" Width="20" Height="20" Parent="key2" X="-0.125" Function="" Connect=""/>
  <Port Y="0.3375" Datasize="1" Datatype="wire" Color="#00ffff" Side="left" Name="rst_n" Inout="input" Width="20" Height="20" Parent="key2" X="-0.125" Function="" Connect=""/>
  <Port Y="0.5375" Datasize="4" Datatype="wire" Color="#8a2be2" Side="left" Name="key_in" Inout="input" Width="20" Height="20" Parent="key2" X="-0.125" Function="" Connect=""/>
  <Port Y="0.1875" Datasize="8" Datatype="reg" Color="#a52a2a" Side="right" Name="key_out" Inout="output" Width="20" Height="20" Parent="key2" X="0.875" Function="" Connect=""/>
  <Port Y="0.4375" Datasize="1" Datatype="reg" Color="#ff7f50" Side="right" Name="key_pressed" Inout="output" Width="20" Height="20" Parent="key2" X="0.875" Function="" Connect=""/>
 </Module>
 <Module Y="49.4686" Include="" Comment="" Parameters="" Class="generate_clk" Code="&#x9;`define DEL 1&#xa;&#x9;&#xa;  //&#xa;&#x9;// Division is 78, which duty is 50% and frequency is 153846Hz&#xa;  // 153846 = 16 * 9600&#xa;&#x9;//&#xa;  reg [6:0] cnt;&#xa;&#xa;  always @( posedge clk or negedge rst_n ) begin&#xa;    if( ~rst_n ) begin&#xa;      cnt     &lt;= #`DEL 7'd0;&#xa;      clk_out &lt;= #`DEL 1'b0;&#xa;    end&#xa;    else if( cnt == 7'd38 ) begin&#xa;      cnt     &lt;= #`DEL cnt + 7'd1;&#xa;      clk_out &lt;= #`DEL 1'b1;&#xa;    end&#xa;    else if( cnt == 7'd77 ) begin&#xa;      cnt     &lt;= #`DEL 7'd0;&#xa;      clk_out &lt;= #`DEL 1'b0;&#xa;    end&#xa;    else begin&#xa;      cnt     &lt;= #`DEL cnt + 7'd1;&#xa;    end&#xa;  end  &#xa;" Color="#d3d3d3" Name="generate_clk2" Type="model" Width="160" Height="160" Parent="divclk_test" X="196.329" File="Current/generate_clk.model">
  <Port Y="0.1875" Datasize="1" Datatype="wire" Color="#0000ff" Side="left" Name="clk" Inout="input" Width="20" Height="20" Parent="generate_clk2" X="-0.125" Function="" Connect=""/>
  <Port Y="0.4375" Datasize="1" Datatype="wire" Color="#00ffff" Side="left" Name="rst_n" Inout="input" Width="20" Height="20" Parent="generate_clk2" X="-0.125" Function="" Connect=""/>
  <Port Y="0.26875" Datasize="1" Datatype="reg" Color="#dc143c" Side="right" Name="clk_out" Inout="output" Width="20" Height="20" Parent="generate_clk2" X="0.875" Function="" Connect=""/>
 </Module>
 <Port Y="0.183333" Datasize="1" Datatype="reg" Color="#faebd7" Side="left" Name="clk" Inout="input" Width="20" Height="20" Parent="divclk_test" X="-0.0222222" Function=""/>
 <Port Y="0.383333" Datasize="1" Datatype="reg" Color="#00ffff" Side="left" Name="rst_n" Inout="input" Width="20" Height="20" Parent="divclk_test" X="-0.0222222" Function=""/>
 <Port Y="0.583333" Datasize="4" Datatype="reg" Color="#7fffd4" Side="left" Name="key_in" Inout="input" Width="20" Height="20" Parent="divclk_test" X="-0.0222222" Function=""/>
 <Port Y="0.233333" Datasize="8" Datatype="wire" Color="#f0ffff" Side="right" Name="key_out" Inout="output" Width="20" Height="20" Parent="divclk_test" X="0.977778" Function=""/>
 <Port Y="0.483333" Datasize="1" Datatype="wire" Color="#f5f5dc" Side="right" Name="key_pressed" Inout="output" Width="20" Height="20" Parent="divclk_test" X="0.977778" Function=""/>
 <Wire To="divclk_test#generate_clk2>clk" Datasize="1" Datatype="wire" Name="divclk_test_clk" Parent="divclk_test" From="divclk_test>clk"/>
 <Wire To="divclk_test#generate_clk2>rst_n" Datasize="1" Datatype="wire" Name="divclk_test_rst_n" Parent="divclk_test" From="divclk_test>rst_n"/>
 <Wire To="divclk_test#key2>key_in" Datasize="4" Datatype="wire" Name="divclk_test_key_in" Parent="divclk_test" From="divclk_test>key_in"/>
 <Wire To="divclk_test#key2>clk" Datasize="1" Datatype="wire" Name="generate_clk2_clk_out" Parent="divclk_test" From="divclk_test#generate_clk2>clk_out"/>
 <Wire To="divclk_test#key2>rst_n" Datasize="1" Datatype="wire" Name="divclk_test_rst_n" Parent="divclk_test" From="divclk_test>rst_n"/>
 <Wire To="divclk_test>key_out" Datasize="8" Datatype="wire" Name="key2_key_out" Parent="divclk_test" From="divclk_test#key2>key_out"/>
 <Wire To="divclk_test>key_pressed" Datasize="1" Datatype="wire" Name="key2_key_pressed" Parent="divclk_test" From="divclk_test#key2>key_pressed"/>
</Module>
