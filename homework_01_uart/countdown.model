<!DOCTYPE Robei>
<Module Code="`define DEL 1&#xa;&#xa;//&#xa;// Count enable edge detected&#xa;//&#xa;reg     count_en_q;&#xa;reg     count_en_start;&#xa;wire    count_en_flag;&#xa;&#xa;always @( posedge clk or negedge rst_n ) begin&#xa;  if( ~rst_n ) begin&#xa;    count_en_q &lt;= #`DEL 1'b0;&#xa;  end&#xa;  else begin&#xa;    count_en_q &lt;= #`DEL count_en;&#xa;  end&#xa;end&#xa;assign count_en_flag = ~count_en_q &amp;&amp; ( count_en );&#xa;&#xa;always @( posedge clk or negedge rst_n ) begin&#xa;  if( ~rst_n ) begin&#xa;    count_en_start &lt;= #`DEL 1'b0;&#xa;  end&#xa;  else if( count_en_flag )begin&#xa;    count_en_start &lt;= #`DEL 1'b1;&#xa;  end&#xa;  else if( count == 8'd99 ) begin&#xa;    count_en_start &lt;= #`DEL 1'b0;&#xa;  end&#xa;end      &#xa;&#xa;&#xa;//&#xa;// Tx_done edge detected&#xa;// Tx_done signal comes from uart unit, while uart transmit one data done, begining next count &#xa;//&#xa;reg     tx_done_q;&#xa;wire    tx_done_n;&#xa;wire    tx_done_flag;&#xa;&#xa;always @( posedge clk or negedge rst_n ) begin&#xa;  if( ~rst_n ) begin&#xa;    tx_done_q &lt;= #`DEL 1'b0;&#xa;  end&#xa;  else begin&#xa;    tx_done_q &lt;= #`DEL tx_done_n;&#xa;  end&#xa;end&#xa;assign tx_done_n = ~tx_done;&#xa;assign tx_done_flag = ~tx_done_q &amp;&amp; ( tx_done_n );&#xa;&#xa;//&#xa;// Countdown and output&#xa;//&#xa;reg [7:0] count;&#xa;   &#xa;&#xa;always @( posedge clk or negedge rst_n ) begin&#xa;  if( ~rst_n ) begin&#xa;    count      &lt;= #`DEL 8'd0;&#xa;    count_full &lt;= #`DEL 1'b0;&#xa;  end&#xa;  else if( count_en_flag ) begin&#xa;    count &lt;= #`DEL 1'b0;&#xa;    count_full &lt;= #`DEL 1'b1;&#xa;  end&#xa;  else if( count_en_start ) begin&#xa;    if( tx_done_flag ) begin&#xa;      if( count == 8'd99 )begin&#xa;        count      &lt;= #`DEL 8'd0;&#xa;        count_full &lt;= #`DEL 1'b0;&#xa;      end&#xa;      else begin&#xa;        count      &lt;= #`DEL count + 1;&#xa;        count_full &lt;= #`DEL 1'b1;&#xa;      end&#xa;    end     &#xa;    else begin&#xa;      count      &lt;= #`DEL count;&#xa;      count_full &lt;= #`DEL 1'b0;&#xa;    end&#xa;  end  &#xa;  else begin&#xa;    count      &lt;= #`DEL count;&#xa;    count_full &lt;= #`DEL 1'b0;&#xa;  end&#xa;end&#xa;&#xa;assign count_out  =  count;&#xa;" Comment="" Include="" Width="900" Name="countdown" Type="module" Class="module" Parent="0" Y="0" Parameters="" Height="600" File="Current/countdown.model" X="0" Color="#d3d3d3">
 <Port Width="20" Datasize="1" Side="left" Name="clk" Parent="countdown" Y="0.15" Height="20" X="-0.0222222" Inout="input" Function="" Color="#0000ff" Datatype="wire"/>
 <Port Width="20" Datasize="1" Side="left" Name="rst_n" Parent="countdown" Y="0.316667" Height="20" X="-0.0222222" Inout="input" Function="" Color="#00ffff" Datatype="wire"/>
 <Port Width="20" Datasize="1" Side="left" Name="count_en" Parent="countdown" Y="0.483333" Height="20" X="-0.0222222" Inout="input" Function="" Color="#8a2be2" Datatype="wire"/>
 <Port Width="20" Datasize="1" Side="right" Name="count_full" Parent="countdown" Y="0.233333" Height="20" X="0.977778" Inout="output" Function="" Color="#a52a2a" Datatype="reg"/>
 <Port Width="20" Datasize="8" Side="right" Name="count_out" Parent="countdown" Y="0.483333" Height="20" X="0.977778" Inout="output" Function="" Color="#7fff00" Datatype="wire"/>
 <Port Width="20" Datasize="1" Side="left" Name="tx_done" Parent="countdown" Y="0.65" Height="20" X="-0.0222222" Inout="input" Function="" Color="#d2691e" Datatype="wire"/>
</Module>
