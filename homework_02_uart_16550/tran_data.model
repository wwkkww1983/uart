<!DOCTYPE Robei>
<Module Name="tran_data" Type="module" Width="900" Class="module" Comment="" X="0" Parameters="" Y="0" Parent="0" Height="600" Color="#d3d3d3" Include="uart_def.v" File="Current/tran_data.model" Code="/*wire count_start;&#xa;assign count_start = ~count_enable;  // Input enable signal&#xa;*/&#xa;wire tx_inv;&#xa;assign tx_done = ~tx_inv;   // Output enable signal&#xa;&#xa;&#xa;">
 <Module Name="generate_clk1" Type="model" Width="160" Class="generate_clk" Comment="" X="156.661" Parameters="" Y="44.7136" Parent="tran_data" Height="160" Color="#d3d3d3" Include="uart_def.v" File="Current/generate_clk.model" Code="parameter CLOCK = 12000000;  // This parameter is equal to the external crystal oscillator on FPGA &#xa;&#xa;wire [`DIV_LENGTH-1:0] division;&#xa;assign division = CLOCK / ( 16 * baud_rate );&#xa;&#xa;//&#xa;// Even division, which duty is 50%&#xa;//&#xa;reg                       clk_even;&#xa;reg     [`DIV_LENGTH-1:0] cnt_even;&#xa;wire    [`DIV_LENGTH-1:0] division_even;&#xa;&#xa;always @( posedge clk or negedge rst_n ) begin&#xa;  if( ~rst_n ) begin&#xa;    cnt_even &lt;= #`DEL `DIV_LENGTH'd0;&#xa;    clk_even &lt;= #`DEL 1'b0;&#xa;  end&#xa;  else if( division[0]==1 ) begin&#xa;    cnt_even &lt;= #`DEL `DIV_LENGTH'd0;&#xa;    clk_even &lt;= #`DEL 1'b0;&#xa;  end&#xa;  else begin&#xa;    if( cnt_even == ( division_even - 1 ) ) begin&#xa;      cnt_even &lt;= #`DEL `DIV_LENGTH'd0;&#xa;      clk_even &lt;= #`DEL ~clk_even;&#xa;    end&#xa;    else begin&#xa;      cnt_even &lt;= #`DEL cnt_even + 1'd1;&#xa;      clk_even &lt;= #`DEL clk_even;&#xa;    end&#xa;  end&#xa;end     &#xa;&#xa;assign division_even = ( division[0] == 0 ) ? ( division >> 1 ) : 0;&#xa;&#xa;//&#xa;// Odd division, which duty is 50%&#xa;//&#xa;reg                     clk_p;&#xa;reg                     clk_n;&#xa;wire                    clk_odd;&#xa;reg   [`DIV_LENGTH-1:0] cnt_p;&#xa;reg   [`DIV_LENGTH-1:0] cnt_n;&#xa;wire  [`DIV_LENGTH-1:0] division_odd;&#xa;&#xa;//&#xa;// Rising edge&#xa;always @( posedge clk or negedge rst_n ) begin&#xa;  if( ~rst_n ) begin&#xa;    clk_p &lt;= #`DEL 1'b0;&#xa;    cnt_p &lt;= #`DEL `DIV_LENGTH'b0;&#xa;  end&#xa;  else if( division[0]==0 ) begin    &#xa;    clk_p &lt;= #`DEL 1'b0;&#xa;    cnt_p &lt;= #`DEL `DIV_LENGTH'b0;&#xa;  end&#xa;  else begin&#xa;    if( cnt_p == division_odd - 1 ) begin&#xa;      clk_p &lt;= #`DEL ~clk_p;&#xa;      cnt_p &lt;= #`DEL `DIV_LENGTH'b0;&#xa;    end&#xa;    else if( cnt_p == ( ( division - 1 ) >> 1 ) )begin&#xa;      clk_p &lt;= #`DEL ~clk_p;&#xa;      cnt_p &lt;= #`DEL cnt_p + 1'b1;&#xa;    end&#xa;    else begin&#xa;      clk_p &lt;= #`DEL clk_p;&#xa;      cnt_p &lt;= #`DEL cnt_p + 1'b1;&#xa;    end&#xa;  end&#xa;end      &#xa;&#xa;//&#xa;// Falling edge&#xa;always @( negedge clk or negedge rst_n ) begin&#xa;  if( ~rst_n ) begin&#xa;    clk_n &lt;= #`DEL 1'b0;&#xa;    cnt_n &lt;= #`DEL `DIV_LENGTH'b0;&#xa;  end&#xa;  else if( division[0] == 0 ) begin    &#xa;    clk_n &lt;= #`DEL 1'b0;&#xa;    cnt_n &lt;= #`DEL `DIV_LENGTH'b0;&#xa;  end&#xa;  else begin&#xa;    if( cnt_n == division_odd - 1 ) begin&#xa;      clk_n &lt;= #`DEL ~clk_n;&#xa;      cnt_n &lt;= #`DEL `DIV_LENGTH'b0;&#xa;    end&#xa;    else if( cnt_n == ( ( division - 1 ) >> 1 ) )begin&#xa;      clk_n &lt;= #`DEL ~clk_n;&#xa;      cnt_n &lt;= #`DEL cnt_n + `DIV_LENGTH'b1;&#xa;    end&#xa;    else begin&#xa;      clk_n &lt;= #`DEL clk_n;&#xa;      cnt_n &lt;= #`DEL cnt_n + `DIV_LENGTH'b1;&#xa;    end&#xa;  end&#xa;end     &#xa;&#xa;&#xa;assign division_odd = ( division[0] == 1 ) ? division : 0;&#xa;assign clk_odd = clk_n | clk_p;&#xa;&#xa;assign clk_out = ( division[0] == 1 ) ? clk_odd : clk_even;">
  <Port Connect="" Name="clk" Inout="input" Function="" Width="20" Side="left" X="-0.125" Y="0.1375" Datatype="wire" Parent="generate_clk1" Height="20" Color="#0000ff" Datasize="1"/>
  <Port Connect="" Name="rst_n" Inout="input" Function="" Width="20" Side="left" X="-0.125" Y="0.3375" Datatype="wire" Parent="generate_clk1" Height="20" Color="#00ffff" Datasize="1"/>
  <Port Connect="19'd9600" Name="baud_rate" Inout="input" Function="" Width="20" Side="left" X="-0.125" Y="0.5375" Datatype="wire" Parent="generate_clk1" Height="20" Color="#5f9ea0" Datasize="19"/>
  <Port Connect="" Name="clk_out" Inout="output" Function="" Width="20" Side="right" X="0.875" Y="0.26875" Datatype="wire" Parent="generate_clk1" Height="20" Color="#d2691e" Datasize="1"/>
 </Module>
 <Module Name="count_uart_165502" Type="model" Width="160" Class="count_uart_16550" Comment="" X="489.558" Parameters="" Y="247.987" Parent="tran_data" Height="160" Color="#d3d3d3" Include="" File="Current/count_uart_16550.model" Code="&#xa;&#xa;&#xa;">
  <Port Connect="" Name="clk" Inout="input" Function="" Width="20" Side="left" X="-0.125" Y="0.1375" Datatype="wire" Parent="count_uart_165502" Height="20" Color="#faebd7" Datasize="1"/>
  <Port Connect="" Name="rst_n" Inout="input" Function="" Width="20" Side="left" X="-0.125" Y="0.3375" Datatype="wire" Parent="count_uart_165502" Height="20" Color="#00ffff" Datasize="1"/>
  <Port Connect="" Name="count_en" Inout="input" Function="" Width="20" Side="left" X="-0.125" Y="0.5375" Datatype="wire" Parent="count_uart_165502" Height="20" Color="#7fffd4" Datasize="1"/>
  <Port Connect="" Name="tx" Inout="output" Function="" Width="20" Side="right" X="0.875" Y="0.1875" Datatype="wire" Parent="count_uart_165502" Height="20" Color="#f0ffff" Datasize="1"/>
  <Port Connect="tx_inv" Name="tx_valid" Inout="output" Function="" Width="20" Side="right" X="0.875" Y="0.4375" Datatype="wire" Parent="count_uart_165502" Height="20" Color="#f5f5dc" Datasize="1"/>
 </Module>
 <Port Name="clk" Inout="input" Function="" Width="20" Side="left" X="-0.0222222" Y="0.183333" Datatype="wire" Parent="tran_data" Height="20" Color="#faebd7" Datasize="1"/>
 <Port Name="rst_n" Inout="input" Function="" Width="20" Side="left" X="-0.0222222" Y="0.383333" Datatype="wire" Parent="tran_data" Height="20" Color="#00ffff" Datasize="1"/>
 <Port Name="count_enable" Inout="input" Function="" Width="20" Side="left" X="-0.0222222" Y="0.583333" Datatype="wire" Parent="tran_data" Height="20" Color="#7fffd4" Datasize="1"/>
 <Port Name="tx" Inout="output" Function="" Width="20" Side="right" X="0.977778" Y="0.233333" Datatype="wire" Parent="tran_data" Height="20" Color="#f0ffff" Datasize="1"/>
 <Port Name="tx_done" Inout="output" Function="" Width="20" Side="right" X="0.977778" Y="0.483333" Datatype="wire" Parent="tran_data" Height="20" Color="#f5f5dc" Datasize="1"/>
 <Wire Name="tran_data_clk" To="tran_data#generate_clk1>clk" From="tran_data>clk" Datatype="wire" Parent="tran_data" Datasize="1"/>
 <Wire Name="tran_data_rst_n" To="tran_data#generate_clk1>rst_n" From="tran_data>rst_n" Datatype="wire" Parent="tran_data" Datasize="1"/>
 <Wire Name="generate_clk1_clk_out" To="tran_data#count_uart_165502>clk" From="tran_data#generate_clk1>clk_out" Datatype="wire" Parent="tran_data" Datasize="1"/>
 <Wire Name="tran_data_rst_n" To="tran_data#count_uart_165502>rst_n" From="tran_data>rst_n" Datatype="wire" Parent="tran_data" Datasize="1"/>
 <Wire Name="count_uart_165502_tx" To="tran_data>tx" From="tran_data#count_uart_165502>tx" Datatype="wire" Parent="tran_data" Datasize="1"/>
 <Wire Name="tran_data_count_enable" To="tran_data#count_uart_165502>count_en" From="tran_data>count_enable" Datatype="wire" Parent="tran_data" Datasize="1"/>
</Module>
