<!DOCTYPE Robei>
<Module Name="countdown" Type="module" Width="900" Class="module" Comment="" X="0" Parameters="" Y="0" Parent="0" Height="600" Color="#d3d3d3" Include="" File="Current/countdown.model" Code="`define DEL 1&#xa;&#xa;//&#xa;// Count enable edge detected&#xa;//&#xa;reg     count_en_q;&#xa;reg     count_en_start;&#xa;wire    count_en_flag;&#xa;&#xa;always @( posedge clk or negedge rst_n ) begin&#xa;  if( ~rst_n ) begin&#xa;    count_en_q &lt;= #`DEL 1'b1;&#xa;  end&#xa;  else begin&#xa;    count_en_q &lt;= #`DEL count_en;&#xa;  end&#xa;end&#xa;assign count_en_flag = ~count_en_q &amp;&amp; ( count_en );&#xa;&#xa;always @( posedge clk or negedge rst_n ) begin&#xa;  if( ~rst_n ) begin&#xa;    count_en_start &lt;= #`DEL 1'b0;&#xa;  end&#xa;  else if( count_en_flag )begin&#xa;    count_en_start &lt;= #`DEL 1'b1;&#xa;  end&#xa;  else if( count == 8'd99 ) begin&#xa;    count_en_start &lt;= #`DEL 1'b0;&#xa;  end&#xa;end      &#xa;&#xa;&#xa;//&#xa;// Tx_done edge detected&#xa;// Tx_done signal comes from uart unit, while uart transmit one data done, begining next count &#xa;//&#xa;reg     tx_done_q;&#xa;wire    tx_done_n;&#xa;wire    tx_done_flag;&#xa;&#xa;always @( posedge clk or negedge rst_n ) begin&#xa;  if( ~rst_n ) begin&#xa;    tx_done_q &lt;= #`DEL 1'b0;&#xa;  end&#xa;  else begin&#xa;    tx_done_q &lt;= #`DEL tx_done_n;&#xa;  end&#xa;end&#xa;assign tx_done_n = ~tx_done;&#xa;assign tx_done_flag = ~tx_done_q &amp;&amp; ( tx_done_n );&#xa;&#xa;//&#xa;// Countdown and output&#xa;//&#xa;reg [7:0] count;&#xa;   &#xa;&#xa;always @( posedge clk or negedge rst_n ) begin&#xa;  if( ~rst_n ) begin&#xa;    count      &lt;= #`DEL 8'd0;&#xa;    count_full &lt;= #`DEL 1'b0;&#xa;  end&#xa;  else if( count_en_flag ) begin&#xa;    count &lt;= #`DEL 8'b0;&#xa;    count_full &lt;= #`DEL 1'b1;&#xa;  end&#xa;  else if( count_en_start ) begin&#xa;    if( tx_done_flag ) begin&#xa;      if( count == 8'd99 )begin&#xa;        count      &lt;= #`DEL 8'd0;&#xa;        count_full &lt;= #`DEL 1'b0;&#xa;      end&#xa;      else begin&#xa;        count      &lt;= #`DEL count + 1;&#xa;        count_full &lt;= #`DEL 1'b1;&#xa;      end&#xa;    end     &#xa;    else begin&#xa;      count      &lt;= #`DEL count;&#xa;      count_full &lt;= #`DEL 1'b0;&#xa;    end&#xa;  end  &#xa;  else begin&#xa;    count      &lt;= #`DEL 0;&#xa;    count_full &lt;= #`DEL 1'b0;&#xa;  end&#xa;end&#xa;&#xa;assign count_out  =  count;&#xa;">
 <Port Name="clk" Inout="input" Function="" Width="20" Side="left" X="-0.0222222" Y="0.15" Datatype="wire" Parent="countdown" Height="20" Color="#0000ff" Datasize="1"/>
 <Port Name="rst_n" Inout="input" Function="" Width="20" Side="left" X="-0.0222222" Y="0.316667" Datatype="wire" Parent="countdown" Height="20" Color="#00ffff" Datasize="1"/>
 <Port Name="count_en" Inout="input" Function="" Width="20" Side="left" X="-0.0222222" Y="0.483333" Datatype="wire" Parent="countdown" Height="20" Color="#8a2be2" Datasize="1"/>
 <Port Name="count_full" Inout="output" Function="" Width="20" Side="right" X="0.977778" Y="0.233333" Datatype="reg" Parent="countdown" Height="20" Color="#a52a2a" Datasize="1"/>
 <Port Name="count_out" Inout="output" Function="" Width="20" Side="right" X="0.977778" Y="0.483333" Datatype="wire" Parent="countdown" Height="20" Color="#7fff00" Datasize="8"/>
 <Port Name="tx_done" Inout="input" Function="" Width="20" Side="left" X="-0.0222222" Y="0.65" Datatype="wire" Parent="countdown" Height="20" Color="#d2691e" Datasize="1"/>
</Module>
